document.addEventListener('DOMContentLoaded', () => {
    // SECTION: CONFIGURATION & INITIALISATION
    const CONFIG = window.APP_CONFIG;
    const { LOGO_PDF_URL, LOGO_APP_URL_FOR_PRESTA_ICON, PROF_COMPTA_IMG_URL_PDF, HELENE_IMG_URL_PDF } = CONFIG;
    const appContent = document.getElementById('ggf-app-content');
    const tutorialModal = document.getElementById('ggf-tutorial-modal');
    const tutorialBody = document.getElementById('ggf-tutorial-body');
    const helpBtn = document.getElementById('ggf-help-btn');
    const progressFill = document.getElementById('ggf-progress-fill');
    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
    let state = { currentPanel: 'loading', goals: { ca: 2500, net: 1200, savings: 500 }, isVFL: false, inputs: {}, charts: [], isTransitioning: false };
    const currencyFormatter = new Intl.NumberFormat('fr-FR', { style: 'currency', currency: 'EUR' });
    const panelsOrder = ['intro', 'goals', 'prestations', 'projection', 'charges', 'clients', 'summary', 'results', 'insights'];

    // SECTION: FONCTIONS UTILITAIRES
    const debounce = (func, wait) => { let t; return (...a) => { clearTimeout(t); t = setTimeout(() => func(...a), wait); } };
    const playSound = (sound) => { if (CONFIG?.SOUNDS?.[sound] && !prefersReducedMotion) CONFIG.SOUNDS[sound].play(); };
    const getRandomQuote = (type = 'MOTIVATIONAL_QUOTES') => CONFIG[type][Math.floor(Math.random() * CONFIG[type].length)];
    const createBilanCardHTML = (item) => { const iconUrl = CONFIG.ICON_URLS[item.iconKey] || ''; const featherIcon = CONFIG.FEATHER_ICONS[item.iconKey] || 'circle'; return `<div class="ggf-bilan-card"><div class="ggf-bilan-card-inner"><div class="ggf-bilan-intro-icon-wrapper"><img src="${iconUrl}" alt="${item.label}"></div><div class="ggf-bilan-final-data-wrapper"><i data-feather="${featherIcon}" class="small-icon"></i><p class="ggf-bilan-value" style="color: ${item.color};">${item.value}</p><p class="ggf-bilan-legend">${item.label}</p></div></div></div>`; };
    
    // SECTION: LOGIQUE DE CALCUL
    const calculatePriceCoaching = () => {
        let actualCA = 0;
        let potentialCA = 0;
        CONFIG.PRESTATIONS.forEach(p => {
            const qty = Number(state.inputs[`presta-qty-${p.id}`]) || 0;
            const actualPrice = Number(state.inputs[`presta-price-${p.id}`]) || p.price;
            const recommendedPrice = p.recommendedPrice;
            actualCA += qty * actualPrice;
            potentialCA += qty * recommendedPrice;
        });
        const difference = potentialCA - actualCA;
        return { actualCA, potentialCA, difference };
    };
    const calculateIncomeTax = (annualNetIncome) => { let tax = 0, remainingIncome = annualNetIncome, previousCap = 0; for (const bracket of CONFIG.INCOME_TAX_BRACKETS) { if (remainingIncome <= 0) break; const taxableInBracket = Math.min(remainingIncome, bracket.cap - previousCap); tax += taxableInBracket * bracket.rate; remainingIncome -= taxableInBracket; previousCap = bracket.cap; } return tax; };
    const calculate = () => { const goals = { ca: Number(state.inputs.goal_ca) || state.goals.ca, net: Number(state.inputs.goal_net) || state.goals.net, savings: Number(state.inputs.goal_savings) || state.goals.savings }; let totalCA = 0; CONFIG.PRESTATIONS.forEach(p => { const qty = Number(state.inputs[`presta-qty-${p.id}`]) || 0; const price = Number(state.inputs[`presta-price-${p.id}`]) || p.price; totalCA += qty * price; }); const fixedCharges = (Number(state.inputs.charge_loyer) || 0) + (Number(state.inputs.charge_abo) || 0) + (Number(state.inputs.charge_marketing) || 0); const variableCharges = Number(state.inputs.charge_conso) || 0; const totalCharges = fixedCharges + variableCharges; const taxRate = state.isVFL ? CONFIG.TAX_RATES.vfl : CONFIG.TAX_RATES.classic; const socialContributions = totalCA * taxRate; const netBeforeIncomeTax = totalCA - totalCharges - socialContributions; const otherIncome = Number(state.inputs.other_income) || 0; const totalAnnualIncome = (netBeforeIncomeTax * 12) + otherIncome; const annualIncomeTax = calculateIncomeTax(totalAnnualIncome); const monthlyIncomeTax = annualIncomeTax / 12; const netAfterAll = netBeforeIncomeTax - monthlyIncomeTax; const savingsProgress = goals.savings > 0 ? (netAfterAll / goals.savings) * 100 : (netAfterAll > 0 ? 100 : 0); const clientsStart = Number(state.inputs.clients_start) || 0; const clientsGained = Number(state.inputs.clients_gained) || 0; const clientsLost = Number(state.inputs.clients_lost) || 0; const totalClients = clientsStart + clientsGained - clientsLost; const netClientChange = clientsGained - clientsLost; return { totalCA, netAfterAll, totalCharges, socialContributions, monthlyIncomeTax, netBeforeIncomeTax, savingsProgress, goals, totalClients, netClientChange }; };

    // SECTION: RENDU DE L'INTERFACE
    const updateProgressBar = () => { const ci = panelsOrder.indexOf(state.currentPanel); const p = ((ci + 1) / panelsOrder.length) * 100; if (progressFill) progressFill.style.width = `${p}%`; };
    const animateBilanCards = () => { if (typeof gsap === 'undefined' || prefersReducedMotion) return; const cards = Array.from(document.querySelectorAll('.ggf-bilan-card')); if (!cards.length) return; const timeline = gsap.timeline({ onComplete: () => cards.forEach(card => { const inner = card.querySelector('.ggf-bilan-card-inner'); gsap.set(inner, { rotationY: 180 }); card.addEventListener('click', () => { gsap.to(inner, { rotationY: '+=180', duration: 0.6, ease: 'back.inOut(1.7)' }); }); }) }); timeline.to(cards, { autoAlpha: 1, duration: 0.4, stagger: 0.08, ease: 'power2.out' }).to(cards.map(card => card.querySelector('.ggf-bilan-card-inner')), { rotationY: 180, duration: 0.6, stagger: 0.08, ease: 'back.inOut(1.7)', delay: 0.5 }, "-=0.2"); };
    const renderAndAnimateNewPanel = (pid) => { state.currentPanel = pid; appContent.innerHTML = ''; const rf = { loading, intro, goals, prestations, projection, charges, clients, summary, results, insights }; appContent.innerHTML = rf[pid] ? rf[pid]() : rf['intro'](); setupCustomNumberInputs(); const np = document.querySelector('.ggf-panel.active, #ggf-loading-screen'); if (np) { np.style.display = 'block'; np.setAttribute('role', 'region'); gsap.fromTo(np, { opacity: 0, scale: 0.95 }, { opacity: 1, scale: 1, duration: prefersReducedMotion ? 0 : 0.4, ease: "power2.out", onComplete: () => { window.scrollTo({ top: 0, behavior: 'smooth' }); np.focus({ preventScroll: true }); state.isTransitioning = false; if (pid === 'insights') renderAllCharts(); if (pid === 'projection') renderProjectionChart(); if (pid === 'results') triggerConfetti(); if (pid === 'prestations') updateCoachingSummary(); if (pid === 'summary' || pid === 'results') { if (typeof feather !== 'undefined') feather.replace({ width: '1em', height: '1em' }); animateBilanCards(); } saveStateToLocalStorage(); updateProgressBar(); playSound('click'); } }); } else { state.isTransitioning = false; } };
    const showPanel = (pid) => { if (state.isTransitioning || state.currentPanel === pid) return; state.isTransitioning = true; const op = document.querySelector('.ggf-panel.active, #ggf-loading-screen'); if (op) { gsap.to(op, { opacity: 0, scale: 0.95, duration: prefersReducedMotion ? 0 : 0.3, ease: "power2.in", onComplete: () => { op.style.display = 'none'; renderAndAnimateNewPanel(pid); } }); } else { renderAndAnimateNewPanel(pid); } };
    const loading = () => `<div id="ggf-loading-screen"><div class="spinner"></div><p>Le Prof forge ton trésor en or...</p><p class="ggf-motivational-quote">${getRandomQuote()}</p></div>`; const intro = () => `<section id="intro-panel" class="ggf-panel active"><div class="ggf-intro-professor-hero"><img src="${PROF_COMPTA_IMG_URL_PDF}" alt="Le Professeur Comptable"></div><h1 class="ggf-h1">Prête à <span class="ggf-h1-gold">régner sur tes finances</span>, impératrice ?</h1><p class="ggf-sub-heading">Le Professeur Comptable transforme tes chiffres en un empire doré. Brille, calcule, et domine avec élégance !</p><p class="ggf-motivational-quote">${getRandomQuote()}</p><div style="text-align: center; margin-top: var(--space-6);"><button data-goto="goals" class="ggf-btn ggf-btn-primary">Au palais, Prof' !</button></div></section>`; const goals = () => `<section id="goals-panel" class="ggf-panel active"><h2 class="ggf-h2">Tes <span class="ggf-h2-gold">Ambitions Royales</span></h2><p class="ggf-sub-heading">Fixe des objectifs dignes d'une reine.</p><div class="ggf-card" style="margin-bottom:0;"><div class="ggf-input-group"><label for="goal-ca" class="ggf-label">Objectif C.A. (€/mois)</label><input type="number" id="goal-ca" data-input-id="goal_ca" class="ggf-input" value="${state.inputs.goal_ca ?? ''}" placeholder="2500" min="0"></div><div class="ggf-input-group"><label for="goal-net" class="ggf-label">Objectif Bénéfice Net (€/mois)</label><input type="number" id="goal-net" data-input-id="goal_net" class="ggf-input" value="${state.inputs.goal_net ?? ''}" placeholder="1200" min="0"></div><div class="ggf-input-group" style="margin-bottom:0;"><label for="goal-savings" class="ggf-label">Objectif Épargne (€/mois)</label><input type="number" id="goal-savings" data-input-id="goal_savings" class="ggf-input" value="${state.inputs.goal_savings ?? ''}" placeholder="500" min="0"></div></div><p class="ggf-motivational-quote">${getRandomQuote()}</p><div class="ggf-nav-buttons"><button data-goto="intro" class="ggf-btn ggf-btn-secondary">Retour</button><button data-goto="prestations" class="ggf-btn ggf-btn-primary">Vers tes talents !</button></div></section>`;
    const prestations = () => { return `<section id="prestations-panel" class="ggf-panel active"><h2 class="ggf-h2">Tes <span class="ggf-h2-gold">Joyaux de Talent</span></h2><p class="ggf-sub-heading">Chaque service est une gemme précieuse. Compare tes tarifs et vois ton potentiel !</p><div class="ggf-grid ggf-grid-2-col">${CONFIG.PRESTATIONS.map(p => `<div class="ggf-card"><p class="ggf-presta-title"><span class="ggf-presta-logo-wrapper" style="--mask-url: url('${LOGO_APP_URL_FOR_PRESTA_ICON}');"><img src="${LOGO_APP_URL_FOR_PRESTA_ICON}" alt=""></span><span class="ggf-presta-title-text">${p.name}</span></p><div class="ggf-input-group"><label for="presta-qty-${p.id}" class="ggf-label">Nombre de clientes</label><input type="number" id="presta-qty-${p.id}" data-input-id="presta-qty-${p.id}" class="ggf-input" placeholder="0" value="${state.inputs[`presta-qty-${p.id}`] ?? ''}" min="0"></div><div class="ggf-input-group"><label for="presta-price-${p.id}" class="ggf-label">Ton Prix (€)</label><input type="number" id="presta-price-${p.id}" data-input-id="presta-price-${p.id}" class="ggf-input" placeholder="${p.price}" value="${state.inputs[`presta-price-${p.id}`] ?? ''}" min="0"></div><div class="recommended-price-info">Prix conseillé : <span>${currencyFormatter.format(p.recommendedPrice)}</span></div></div>`).join('')}</div><div class="ggf-coaching-summary"><div class="ggf-coaching-summary-row"><span class="ggf-coaching-summary-label">Ton C.A. Actuel</span><span class="ggf-coaching-summary-value" id="coach-value-actual"></span></div><div class="ggf-coaching-summary-row"><span class="ggf-coaching-summary-label">C.A. Potentiel (conseillé)</span><span class="ggf-coaching-summary-value" id="coach-value-potential"></span></div><div class="ggf-coaching-summary-row"><span class="ggf-coaching-summary-label">Différence</span><span class="ggf-coaching-summary-value" id="coach-value-difference"></span></div></div><div class="ggf-nav-buttons"><button data-goto="goals" class="ggf-btn ggf-btn-secondary">Retour</button><button data-goto="projection" class="ggf-btn ggf-btn-primary">Voir mon Potentiel</button></div></section>`; };
    const projection = () => { const { difference } = calculatePriceCoaching(); const annualGain = difference * 12; const fiveYearGain = annualGain * 5; const tenYearGain = annualGain * 10; let professorText; if (difference <= 0) { professorText = "Félicitations, Impératrice ! Vos tarifs sont déjà au niveau de l'excellence que je préconise. Votre empire est sur une trajectoire dorée. Continuez ainsi !"; } else { professorText = `Impératrice, regardez bien ces chiffres. La différence que vous voyez, ce n'est pas juste de l'argent. Sur 10 ans, c'est <strong>l'apport pour votre propre institut</strong>, c'est l'indépendance financière, c'est la tranquillité d'esprit.<br><br>Parfois, 5€ de plus sur une prestation ne changent pas la vie de votre cliente, mais ils peuvent <strong>radicalement transformer la vôtre</strong>. Pensez-y.`; } return `<section id="projection-panel" class="ggf-panel active"><h2 class="ggf-h2">L'Effet Papillon de <span class="ggf-h2-gold">vos Tarifs</span></h2><p class="ggf-sub-heading">Découvrez comment quelques euros aujourd'hui se transforment en un trésor sur le long terme.</p><div class="ggf-card" style="margin-bottom: 1.5rem;"><div class="ggf-chart-container"><h4>Projection de C.A. sur 1 an</h4><canvas id="projection-chart-line"></canvas></div></div><div class="ggf-projection-kpi-grid"><div class="ggf-card projection-kpi"><span class="projection-kpi-label">Gain Potentiel sur 1 an</span><span class="projection-kpi-value">${currencyFormatter.format(annualGain)}</span></div><div class="ggf-card projection-kpi"><span class="projection-kpi-label">... sur 5 ans</span><span class="projection-kpi-value">${currencyFormatter.format(fiveYearGain)}</span></div><div class="ggf-card projection-kpi gold-kpi"><span class="projection-kpi-label">Le Trésor sur 10 ans</span><span class="projection-kpi-value">${currencyFormatter.format(tenYearGain)}</span></div></div><div class="ggf-hugo-bubble" style="background-color: transparent; border: none; padding: 0; margin-top: 1rem;"><img src="${PROF_COMPTA_IMG_URL_PDF}" alt="Le Professeur Comptable" style="width:100px; height:100px;"><div class="hugo-dialogue"><p>${professorText}</p><span style="text-align: right; width: 100%;">- Le Professeur</span></div></div><div class="ggf-nav-buttons"><button data-goto="prestations" class="ggf-btn ggf-btn-secondary">Modifier mes tarifs</button><button data-goto="charges" class="ggf-btn ggf-btn-primary">J'ai compris !</button></div></section>`;};
    const charges = () => `<section id="charges-panel" class="ggf-panel active"><h2 class="ggf-h2">Tes <span class="ggf-h2-gold">Dépenses & Fiscalité</span></h2><p class="ggf-sub-heading">Les charges sont les ombres de ton royaume. Traque-les pour protéger ton or !</p><div class="ggf-grid ggf-grid-2-col"><div class="ggf-card"><h3 style="font-family: var(--font-display); font-size: 1.2rem; margin: 0 0 var(--space-4) 0; color: var(--ggf-gold);">Charges Mensuelles</h3><div class="ggf-input-group"><label class="ggf-label" for="charge-loyer">Loyer / Espace (€)</label><input type="number" id="charge-loyer" data-input-id="charge_loyer" class="ggf-input" placeholder="0" value="${state.inputs.charge_loyer ?? ''}" min="0"></div><div class="ggf-input-group"><label class="ggf-label" for="charge-abo">Assurances, Logiciels (€)</label><input type="number" id="charge-abo" data-input-id="charge_abo" class="ggf-input" placeholder="0" value="${state.inputs.charge_abo ?? ''}" min="0"></div><div class="ggf-input-group"><label class="ggf-label" for="charge-marketing">Marketing & Pub (€)</label><input type="number" id="charge-marketing" data-input-id="charge_marketing" class="ggf-input" placeholder="0" value="${state.inputs.charge_marketing ?? ''}" min="0"></div><div class="ggf-input-group" style="margin-bottom:0;"><label class="ggf-label" for="charge-conso">Consommables (€)</label><input type="number" id="charge-conso" data-input-id="charge_conso" class="ggf-input" placeholder="0" value="${state.inputs.charge_conso ?? ''}" min="0"></div></div><div class="ggf-card"><h3 style="font-family: var(--font-display); font-size: 1.2rem; margin: 0 0 var(--space-4) 0; color: var(--ggf-gold);">Régime Fiscal & Impôts</h3><div id="ggf-vfl-toggle-container"><div class="ggf-vfl-option ${!state.isVFL?'active':''}" data-vfl="false">Classique</div><div class="ggf-vfl-option ${state.isVFL?'active':''}" data-vfl="true">VFL</div></div><p style="font-size: 0.9rem; color: var(--ggf-text-muted); margin-top: var(--space-2); line-height: 1.6;">Classique ou VFL ? Ton choix sculpte ton empire fiscal !</p><div class="ggf-input-group" style="margin-top: var(--space-6); margin-bottom: 0;"><label class="ggf-label" for="other_income">Autres revenus du foyer (€/an)</label><input type="number" id="other_income" data-input-id="other_income" class="ggf-input" placeholder="Ex: 20000" value="${state.inputs.other_income ?? ''}" min="0"></div></div></div><p class="ggf-motivational-quote">${getRandomQuote()}</p><div class="ggf-nav-buttons"><button data-goto="projection" class="ggf-btn ggf-btn-secondary">Retour</button><button data-goto="clients" class="ggf-btn ggf-btn-primary">Vers ta Cour !</button></div></section>`;
    const clients = () => `<section id="clients-panel" class="ggf-panel active"><h2 class="ggf-h2">L'Évolution de <span class="ggf-h2-gold">ta Cour</span></h2><p class="ggf-sub-heading">Chaque nouvelle cliente est une alliée. Compte tes forces pour préparer ta conquête !</p><div class="ggf-card" style="margin-bottom: 0;"><div class="ggf-input-group"><label for="clients_start" class="ggf-label">Clientes en début de mois</label><input type="number" id="clients_start" data-input-id="clients_start" class="ggf-input" value="${state.inputs.clients_start ?? ''}" placeholder="20" min="0"></div><div class="ggf-input-group"><label for="clients_gained" class="ggf-label">Nouvelles clientes gagnées</label><input type="number" id="clients_gained" data-input-id="clients_gained" class="ggf-input" value="${state.inputs.clients_gained ?? ''}" placeholder="5" min="0"></div><div class="ggf-input-group" style="margin-bottom:0;"><label for="clients_lost" class="ggf-label">Clientes perdues ce mois-ci</label><input type="number" id="clients_lost" data-input-id="clients_lost" class="ggf-input" value="${state.inputs.clients_lost ?? ''}" placeholder="1" min="0"></div></div><div class="ggf-hugo-bubble"><img src="${CONFIG.HUGO_IMG_URL}" alt="Hugo, le Stratège Marketing"><div class="hugo-dialogue"><p>${getRandomQuote('HUGO_QUOTES')}</p><span>- Hugo, le Stratège</span></div></div><div class="ggf-nav-buttons"><button data-goto="charges" class="ggf-btn ggf-btn-secondary">Retour</button><button data-goto="summary" class="ggf-btn ggf-btn-primary">Au récapitulatif !</button></div></section>`;
    const summary = () => { const r = calculate(); const si = [{label:'Objectif C.A.',value:currencyFormatter.format(r.goals.ca),color:'var(--ggf-text)',iconKey:'objectif_ca'},{label:'Objectif Net',value:currencyFormatter.format(r.goals.net),color:'var(--ggf-text)',iconKey:'objectif_net'},{label:'Objectif Épargne',value:currencyFormatter.format(r.goals.savings),color:'var(--ggf-text)',iconKey:'epargne'},{label:'C.A. Estimé',value:currencyFormatter.format(r.totalCA),color:'var(--ggf-gold)',iconKey:'ca_estime'},{label:'Total Charges',value:currencyFormatter.format(r.totalCharges),color:'var(--ggf-red)',iconKey:'charge'},{label:'Total Clientes',value:r.totalClients,color:'var(--ggf-blue)',iconKey:'total_clients'}]; return `<section id="summary-panel" class="ggf-panel active"><h2 class="ggf-h2">Ton <span class="ggf-h2-gold">Récapitulatif Impérial</span></h2><p class="ggf-sub-heading">Le Prof a poli tes chiffres. Prête pour le couronnement ?</p><div class="ggf-results-bilan-grid">${si.map(createBilanCardHTML).join('')}</div><p class="ggf-motivational-quote">${getRandomQuote()}</p><div class="ggf-nav-buttons"><button data-goto="clients" class="ggf-btn ggf-btn-secondary">Retour</button><button data-goto="results" class="ggf-btn ggf-btn-primary">Le verdict royal !</button></div></section>`; };
    const results = () => { const r = calculate(); const{ca,net,savings}=r.goals; let pm,t,ph,tips=[],s=0; const prr=r.netBeforeIncomeTax/(r.totalCA||1); if(prr>0.5)s+=40;else if(prr>0.2)s+=20; const ngr=r.netAfterAll/(net||1); if(ngr>=1)s+=40;else s+=ngr*40; const chr=r.totalCharges/(r.totalCA||1); if(chr<0.3)s+=20;else if(chr<0.5)s+=10; s=Math.min(100,Math.max(0,Math.round(s))); if(r.totalCA<ca)tips.push("Ton C.A. manque d'éclat ! Conquiers plus de clientes ou augmente tes tarifs."); if(r.netAfterAll<net)tips.push("Ton bénéfice net mérite plus de grandeur. Réduis les charges ou optimise tes prix !"); if(chr>0.5)tips.push("Tes charges sont un fardeau royal ! Élimine les dépenses inutiles."); if(r.netAfterAll<savings)tips.push("Ton épargne est en retard ! Priorise les économies pour ton futur empire."); if(tips.length===0)tips.push("Ton empire est sur la bonne voie ! Continue à briller et optimise tes chiffres pour régner en maître !"); if(s<40){pm='angry';t=`Aïe... <span class="ggf-h2-gold">TON EMPIRE CHANCELLE !</span>`;ph=`<p>Tes finances ont besoin d'un coup d'éclat !</p><ul><li>${tips.join('</li><li>')}</li></ul>`;playSound('error')}else if(s>=90){pm='happy';t=`MAJESTUEUX ! <span class="ggf-h2-gold">T'ES UNE LÉGENDE !</span>`;ph=`<p>Impératrice suprême ! Ton empire prospère.</p><ul><li>${tips.join('</li><li>')}</li></ul>`;playSound('success')}else{pm='neutral';t=`Bien... <span class="ggf-h2-gold">MAIS VISE L'OR !</span>`;ph=`<p>Ton royaume brille, mais il peut scintiller davantage !</p><ul><li>${tips.join('</li><li>')}</li></ul>`;playSound('click')} setTimeout(()=>{const pw=document.querySelector('.ggf-professor-image-wrapper');if(pw)pw.className=`ggf-professor-image-wrapper ${pm}`},100);const gbp=Math.min(100,(r.netAfterAll/4000)*100);const ri=[{label:'C.A. Estimé',value:currencyFormatter.format(r.totalCA),color:'var(--ggf-text)',iconKey:'ca_estime'},{label:'Charges',value:currencyFormatter.format(r.totalCharges),color:'var(--ggf-red)',iconKey:'charge'},{label:'Cotisations',value:currencyFormatter.format(r.socialContributions),color:'var(--ggf-blue)',iconKey:'cotisation'},{label:'Impôt',value:currencyFormatter.format(r.monthlyIncomeTax),color:'var(--ggf-purple)',iconKey:'impot'},{label:'Épargne Atteinte',value:`${Math.round(r.savingsProgress)}%`,color:r.savingsProgress>=100?'var(--ggf-green)':'var(--ggf-text)',iconKey:'epargne'},{label:'Bénéfice Net',value:currencyFormatter.format(r.netAfterAll),color:'var(--ggf-green)',iconKey:'benefice_net'}]; return `<section id="results-panel" class="ggf-panel active ${s>=90?'results-win':s<40?'results-loss':''}"><h2 class="ggf-h2">${t}</h2><div id="ggf-score-container"><span class="ggf-score-value">${s}</span><p class="ggf-sub-heading">Ton Golden Score</p></div><div class="ggf-verdict-container"><div class="ggf-professor-image-wrapper ${pm}"><img src="${PROF_COMPTA_IMG_URL_PDF}" alt="Le Professeur Comptable"></div><div class="ggf-controls-container">${ph}</div></div><div class="ggf-results-bilan-grid">${ri.map(createBilanCardHTML).join('')}</div><div id="golden-bar-container"><div id="golden-bar"><div id="golden-bar-cursor" style="left: ${gbp}%"></div></div><div class="golden-bar-labels"><span>Pauvre</span><span>Confort</span><span>Riche</span></div></div><p class="ggf-motivational-quote">${getRandomQuote()}</p><div class="ggf-nav-buttons"><button data-goto="summary" class="ggf-btn ggf-btn-secondary">Retour</button><button data-goto="insights" class="ggf-btn ggf-btn-primary">Conseils royaux</button></div></section>`};
    const insights = () => { const r=calculate(); const{goals}=r; const tips=[]; if(r.totalCA<goals.ca)tips.push("Ton C.A. est en dessous de ton objectif. Attire plus de clients ou augmente tes tarifs !"); if(r.netAfterAll<goals.net)tips.push("Ton bénéfice net est faible. Réduis les charges ou optimise tes prestations."); if(r.savingsProgress<100)tips.push("Ton épargne progresse lentement. Mets de côté un pourcentage fixe chaque mois."); const tc=tips.length>0?`<ul>${tips.map(tip=>`<li>${tip}</li>`).join('')}</ul>`:`<p>Ton empire est sur la bonne voie ! Continue à briller et optimise tes chiffres pour régner en maître !</p>`; return`<section id="insights-panel" class="ggf-panel active"><h2 class="ggf-h2">Tes <span class="ggf-h2-gold">Conseils Royaux</span></h2><p class="ggf-sub-heading">Le Prof te guide pour faire briller ton empire financier !</p><div class="ggf-card" style="font-size: 0.9rem; line-height: 1.6;"><div id="ggf-insights-charts-grid"><div class="ggf-chart-container"><h4>Répartition du C.A.</h4><canvas id="insights-chart-donut"></canvas></div><div class="ggf-chart-container"><h4>Objectifs vs. Réalisé</h4><canvas id="insights-chart-bar"></canvas></div></div>${tc}</div><p class="ggf-motivational-quote">${getRandomQuote()}</p><div class="ggf-nav-buttons"><button data-goto="results" class="ggf-btn ggf-btn-secondary">Retour</button><button id="ggf-export-pdf-btn" class="ggf-btn ggf-btn-primary">Exporter en PDF</button><button data-goto="intro" class="ggf-btn ggf-btn-secondary">Recommencer</button></div></section>`};
    const renderAllCharts = () => { if(typeof Chart==='undefined'){console.error("Chart.js is not loaded.");return} state.charts.forEach(c=>c.destroy()); state.charts=[]; const r=calculate(); Chart.defaults.color='#B0B0CC'; Chart.defaults.font.family="'Poppins', sans-serif"; const dCtx=document.getElementById('insights-chart-donut')?.getContext('2d'); if(dCtx){state.charts.push(new Chart(dCtx,{type:'doughnut',data:{labels:['Bénéfice Net','Impôt','Cotisations','Charges'],datasets:[{data:[r.netAfterAll,r.monthlyIncomeTax,r.socialContributions,r.totalCharges].map(v=>Math.max(0,v)),backgroundColor:['#4CAF50','#BB86FC','#5C8CFF','#FF4D4D'],borderColor:'#2A2A41',borderWidth:4,hoverOffset:8}]},options:{cutout:'60%',responsive:true,maintainAspectRatio:true,plugins:{legend:{position:'bottom',labels:{padding:15}}}}}));} const bCtx=document.getElementById('insights-chart-bar')?.getContext('2d'); if(bCtx){state.charts.push(new Chart(bCtx,{type:'bar',data:{labels: ['C.A.', 'Bénéfice Net', 'Épargne'],datasets: [{ label: 'Objectif', data: [r.goals.ca, r.goals.net, r.goals.savings], backgroundColor: 'rgba(205, 175, 118, 0.4)', borderColor: 'rgba(205, 175, 118, 0.7)', borderWidth: 1, borderRadius: 4 },{ label: 'Réalisé', data: [r.totalCA, r.netAfterAll, Math.max(0, r.netAfterAll)], backgroundColor: 'rgba(205, 175, 118, 0.8)', borderColor: '#CDAF76', borderWidth: 1, borderRadius: 4 }]},options:{responsive:true,maintainAspectRatio:true,plugins:{legend:{position:'top'}},scales:{x:{grid:{color:'rgba(255,255,255,0.1)'}},y:{grid:{color:'rgba(255,255,255,0.1)'}}}}}));} };
    const renderProjectionChart = () => { if (typeof Chart === 'undefined') { console.error("Chart.js is not loaded."); return; } state.charts.forEach(c => c.destroy()); state.charts = []; const { actualCA, potentialCA } = calculatePriceCoaching(); const projectionCtx = document.getElementById('projection-chart-line')?.getContext('2d'); if (projectionCtx) { const months = ['Jan', 'Fév', 'Mar', 'Avr', 'Mai', 'Juin', 'Juil', 'Août', 'Sep', 'Oct', 'Nov', 'Déc']; const actualData = months.map((_, i) => actualCA * (i + 1)); const potentialData = months.map((_, i) => potentialCA * (i + 1)); state.charts.push(new Chart(projectionCtx, { type: 'line', data: { labels: months, datasets: [{ label: 'Votre Trajectoire Actuelle', data: actualData, borderColor: 'rgba(255, 255, 255, 0.5)', backgroundColor: 'rgba(255, 255, 255, 0.1)', borderWidth: 2, pointRadius: 0, tension: 0.4, borderDash: [5, 5], fill: false, }, { label: 'Trajectoire Conseillée (Or)', data: potentialData, borderColor: 'rgba(205, 175, 118, 1)', backgroundColor: 'rgba(205, 175, 118, 0.2)', borderWidth: 3, pointRadius: 0, tension: 0.4, fill: true, }] }, options: { responsive: true, maintainAspectRatio: true, plugins: { legend: { position: 'top', labels: { color: '#B0B0CC' } }, tooltip: { callbacks: { label: function(context) { let label = context.dataset.label || ''; if (label) { label += ': '; } if (context.parsed.y !== null) { label += currencyFormatter.format(context.parsed.y); } return label; } } } }, scales: { y: { ticks: { color: 'rgba(255,255,255,0.7)', callback: value => currencyFormatter.format(value).replace(/\s/g,'').slice(0,-1)+'k' }, grid: { color: 'rgba(255,255,255,0.1)' } }, x: { ticks: { color: 'rgba(255,255,255,0.7)' }, grid: { color: 'rgba(255,255,255,0.1)' } } } } })); } };
    
    function updateCoachingSummary() {
        const results = calculatePriceCoaching();
        const actualEl = document.getElementById('coach-value-actual');
        const potentialEl = document.getElementById('coach-value-potential');
        const diffEl = document.getElementById('coach-value-difference');
        if (actualEl) actualEl.textContent = currencyFormatter.format(results.actualCA);
        if (potentialEl) potentialEl.textContent = currencyFormatter.format(results.potentialCA);
        if (diffEl) {
            diffEl.textContent = `${results.difference >= 0 ? '+' : ''}${currencyFormatter.format(results.difference)}`;
            diffEl.className = 'ggf-coaching-summary-value';
            if (results.difference > 50) diffEl.classList.add('positive');
            else if (results.difference < 0) diffEl.classList.add('negative');
        }
    }

    const generateChartImage = (chartConfig) => {
        return new Promise((resolve) => {
            const offscreenCanvas = document.createElement('canvas');
            offscreenCanvas.width = 400; offscreenCanvas.height = 300;
            let renderFinished = false;
            new Chart(offscreenCanvas.getContext('2d'), { ...chartConfig, options: { ...chartConfig.options, responsive: false, animation: { duration: prefersReducedMotion ? 0 : 400, onComplete: () => { if (!renderFinished) { renderFinished = true; resolve(offscreenCanvas.toDataURL('image/webp', 0.9)); } } }, devicePixelRatio: 2.5 } });
            setTimeout(() => { if (!renderFinished) { renderFinished = true; resolve(offscreenCanvas.toDataURL('image/webp', 0.9)); } }, 800);
        });
    };
    const showPdfLoader = (isLoading = true, isError = false) => {
        const loader = document.getElementById('ggf-pdf-loader');
        if (!loader) return;
        loader.style.display = 'flex';
        const content = loader.querySelector('.ggf-pdf-loader-content');
        const error = loader.querySelector('.ggf-pdf-loader-error');
        content.style.display = isError ? 'none' : 'block';
        error.style.display = isError ? 'block' : 'none';
        loader.style.opacity = isLoading ? '1' : '0';
        loader.style.pointerEvents = isLoading ? 'all' : 'none';
        if (!isLoading) {
             setTimeout(() => { loader.style.display = 'none'; }, 300);
        }
    };
    async function generatePDF() {
        if (typeof html2pdf === 'undefined') {
            console.error("html2pdf.js n'est pas chargé !");
            alert("Erreur: La librairie PDF est manquante.");
            return;
        }
        showPdfLoader(true);
        try {
            const results = calculate();
            const now = new Date();
            const dateStr = now.toLocaleDateString('fr-FR', { month: 'long', year: 'numeric' });
            const filename = `Rapport_Imperial_${now.getFullYear()}${String(now.getMonth() + 1).padStart(2, '0')}.pdf`;
            const PALETTE = { gold: '#CDAF76', dark_blue: '#2A2A41', text_secondary: '#4F4F4F', background: '#FFFDF5', border: '#EAE2D6', green: '#2f855a', red: '#c53030' };
            const chartFontOptions = { size: 9, family: 'Montserrat', weight: '400' };
            const [donutChartImage, barChartImage] = await Promise.all([
                generateChartImage({ type: 'doughnut', data: { labels: ['Bénéfice Net', 'Impôts & Cotis.', 'Charges'], datasets: [{ data: [results.netAfterAll, results.monthlyIncomeTax + results.socialContributions, results.totalCharges].map(v => Math.max(v, 0)), backgroundColor: [PALETTE.green, PALETTE.text_secondary, PALETTE.red], borderColor: PALETTE.background, borderWidth: 4 }] }, options: { plugins: { legend: { position: 'bottom', labels: { font: chartFontOptions, color: PALETTE.dark_blue, padding: 10, boxWidth: 12 } } } } }),
                generateChartImage({ type: 'bar', data: { labels: ['C.A.', 'Bénéfice Net'], datasets: [{ label: 'Objectif', data: [results.goals.ca, results.goals.net], backgroundColor: 'rgba(42, 42, 65, 0.4)', borderRadius: 3 }, { label: 'Réalisé', data: [results.totalCA, results.netAfterAll], backgroundColor: PALETTE.gold, borderRadius: 3 }] }, options: { scales: { y: { beginAtZero: true, ticks: { color: PALETTE.text_secondary, font: chartFontOptions } }, x: { ticks: { color: PALETTE.text_secondary, font: chartFontOptions } } }, plugins: { legend: { position: 'top', align: 'end', labels: { font: chartFontOptions, color: PALETTE.dark_blue, boxWidth: 12 } } } } })
            ]);
            const performedPrestations = CONFIG.PRESTATIONS.filter(p => (Number(state.inputs[`presta-qty-${p.id}`]) || 0) > 0);
            let prestationsHTML = '';
            if (performedPrestations.length > 0) {
                const tableRows = performedPrestations.map(p => { const qty = Number(state.inputs[`presta-qty-${p.id}`]) || 0; const price = Number(state.inputs[`presta-price-${p.id}`]) || p.price; const total = qty * price; return `<tr><td>${p.name}</td><td class="r-cell-center">${qty}</td><td class="r-cell-right">${currencyFormatter.format(price)}</td><td class="r-cell-right r-cell-strong">${currencyFormatter.format(total)}</td></tr>`; }).join('');
                prestationsHTML = `<div class="prestation-wrapper"><h2 class="h2-title">Détail de votre activité</h2><table class="r-prestation-table"><thead><tr><th>Prestation</th><th class="r-cell-center">Quantité</th><th class="r-cell-right">Prix Unitaire</th><th class="r-cell-right">Total</th></tr></thead><tbody>${tableRows}</tbody><tfoot><tr><td colspan="3" class="r-total-label">Total du Chiffre d'Affaires</td><td class="r-cell-right r-grand-total">${currencyFormatter.format(results.totalCA)}</td></tr></tfoot></table></div>`;
            } else {
                prestationsHTML = `<div class="prestation-wrapper"><h2 class="h2-title">Détail de votre activité</h2><p class="r-no-presta">Aucune prestation enregistrée pour ce mois.</p></div>`;
            }
            const profTipsList = [];
            if (results.totalCA === 0) { profTipsList.push("Je constate que nous n'avons pas encore de chiffre pour ce mois. Remplissons ensemble les données pour une analyse précise !"); } else { if (results.totalCA < results.goals.ca) profTipsList.push("Votre chiffre d'affaires est prometteur, mais nous pouvons viser plus haut."); if (results.netAfterAll < results.goals.net) profTipsList.push("Le bénéfice est le cœur de votre empire. J'ai quelques pistes pour réduire les charges."); if (profTipsList.length === 0) profTipsList.push("Votre gestion est excellente, les chiffres parlent d'eux-mêmes. Une base solide pour l'avenir. Bravo !"); }
            const profAdvice = `<ul>${profTipsList.map(tip => `<li>${tip}</li>`).join('')}</ul>`;
            const heleneQuote = "“Chaque chiffre de ce rapport est une étape de plus vers l'indépendance et la réussite. Soyez fière du chemin parcouru.”";
            const pdfContentElement = document.createElement('div');
            pdfContentElement.innerHTML = `<div class="pdf-page"><header class="pdf-header"><img src="${LOGO_PDF_URL}" class="logo" crossorigin="anonymous"><div class="header-text"><span class="report-title">Votre Rapport Impérial</span><span class="report-date">Analyse de ${dateStr}</span></div></header><main class="pdf-main"><div class="analysis-block professor-intro"><img src="${PROF_COMPTA_IMG_URL_PDF}" class="avatar" crossorigin="anonymous"><div class="text-content"><h4>L'analyse du Professeur</h4>${profAdvice}</div></div><div class="kpi-grid"><div class="kpi-card"><span class="label">Chiffre d'Affaires Brut</span><span class="value">${currencyFormatter.format(results.totalCA)}</span></div><div class="kpi-card"><span class="label">Total Prélèvements</span><span class="value" style="color:${PALETTE.red};">${currencyFormatter.format(results.totalCharges + results.socialContributions + results.monthlyIncomeTax)}</span></div><div class="kpi-card main-kpi"><span class="label">Bénéfice Net Estimé</span><span class="value" style="color:${PALETTE.green};">${currencyFormatter.format(results.netAfterAll)}</span></div></div><div class="chart-grid"><div class="chart-container"><h3 class="chart-title">Répartition des Revenus</h3><img src="${donutChartImage}" class="chart-img" crossorigin="anonymous"></div><div class="chart-container"><h3 class="chart-title">Objectifs vs. Réalisé</h3><img src="${barChartImage}" class="chart-img" crossorigin="anonymous"></div></div>${prestationsHTML}<div class="helene-bubble"><img src="${HELENE_IMG_URL_PDF}" class="avatar-small" crossorigin="anonymous"><p><em>${heleneQuote}</em></p></div></main><footer class="pdf-footer"><p>© ${now.getFullYear()} HeleneB Académie - Ce document est une simulation et ne se substitue pas à un bilan comptable officiel.</p></footer></div>`;
            const pdfStyles = `<style>@import url('https://fonts.googleapis.com/css2?family=Cinzel:wght@500;700&family=Montserrat:wght@400;600&display=swap'); body{margin:0;background-color:#FFF} .pdf-page{font-family:'Montserrat',sans-serif;color:${PALETTE.dark_blue};background-color:#FFF;box-sizing:border-box;width:210mm;height:297mm;position:relative;display:flex;flex-direction:column;padding:12mm 15mm} .pdf-main{flex-grow:1;display:flex;flex-direction:column} .pdf-header{text-align:center;margin-bottom:8mm} .logo{height:18mm;margin-bottom:3mm} .report-title{font-family:'Cinzel',serif;font-size:16pt;display:block} .report-date{font-size:9pt;color:${PALETTE.text_secondary}} .h2-title{font-family:'Cinzel',serif;font-size:10pt;margin:6mm 0 3mm 0;border-bottom:.5pt solid ${PALETTE.border};padding-bottom:1.5mm;text-align:left} h4{font-family:'Cinzel',serif;font-size:9pt;margin:0 0 1.5mm 0} p,li,span{font-size:7.5pt;line-height:1.4} ul{padding-left:4mm;margin:0} .professor-intro{margin-bottom:6mm;background:${PALETTE.background};border:.5pt solid ${PALETTE.border};padding:4mm;border-radius:3px} .analysis-block{display:flex;align-items:center;gap:4mm} .avatar{width:20mm;height:20mm;border-radius:50%;object-fit:cover;flex-shrink:0} .kpi-grid{display:grid;grid-template-columns:1fr 1fr 1.2fr;gap:3mm;margin-bottom:6mm} .kpi-card{background:${PALETTE.background};border:.5pt solid ${PALETTE.border};border-radius:3px;padding:3mm;text-align:center;display:flex;flex-direction:column;justify-content:center} .kpi-card .label{font-size:6.5pt;text-transform:uppercase;color:${PALETTE.text_secondary};margin-bottom:1mm} .kpi-card .value{font-size:11pt;font-weight:600} .main-kpi{background:#FFF;border-color:${PALETTE.gold}} .main-kpi .value{font-size:14pt} .chart-grid{display:grid;grid-template-columns:1fr 1fr;gap:5mm;margin-bottom:6mm} .chart-container{background-color:${PALETTE.background};padding:3mm;border-radius:3px} .chart-title{font-family:'Cinzel',serif;font-size:8pt;text-align:center;margin:0 0 2mm 0} .chart-img{max-width:100%;height:auto} .prestation-wrapper{margin-bottom:5mm} .r-prestation-table{width:100%;border-collapse:collapse;margin-top:2mm} .r-prestation-table th,.r-prestation-table td{padding:2.5mm 1.5mm;border-bottom:.5pt solid ${PALETTE.border};text-align:left;vertical-align:top;font-size:7.5pt} .r-prestation-table th{font-weight:600;font-size:7pt;text-transform:uppercase;color:${PALETTE.text_secondary}} .r-prestation-table .r-cell-center{text-align:center} .r-prestation-table .r-cell-right{text-align:right;font-variant-numeric:tabular-nums} .r-prestation-table .r-cell-strong{font-weight:600} .r-prestation-table tfoot td{border-bottom:none;border-top:1pt solid ${PALETTE.gold};padding-top:2.5mm;font-weight:600} .r-prestation-table .r-total-label{font-family:'Cinzel',serif;font-size:8.5pt} .r-prestation-table .r-grand-total{font-size:10pt} .r-no-presta{padding:4mm;background-color:${PALETTE.background};border-radius:3px;text-align:center;font-style:italic} .helene-bubble{display:flex;align-items:center;gap:3mm;max-width:90%;margin:auto 0 0 0;padding:3mm;border-radius:20px;background:${PALETTE.background}} .helene-bubble p{margin:0;font-style:italic;font-size:7.5pt} .avatar-small{width:10mm;height:10mm;border-radius:50%;object-fit:cover} .pdf-footer{padding-top:3mm;border-top:.5pt solid ${PALETTE.border};text-align:center} .pdf-footer p{margin:0;font-size:6.5pt;color:#aaa;line-height:1.2}</style>`;
            pdfContentElement.insertAdjacentHTML('afterbegin', pdfStyles);
            const options = { margin: 0, filename: filename, image: { type: 'webp', quality: 0.95 }, html2canvas: { scale: 2.5, useCORS: true, logging: false }, jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' } };
            await html2pdf().from(pdfContentElement).set(options).save();
            showPdfLoader(false);
        } catch (error) {
            console.error("Erreur critique lors de la création du PDF:", error);
            showPdfLoader(true, true);
        }
    }

    // SECTION: INITIALISATION & ÉCOUTEURS D'ÉVÉNEMENTS
    const triggerConfetti = () => { if (typeof confetti !== 'undefined' && !prefersReducedMotion) { const r = calculate(); if (r.netAfterAll > r.goals.net) { confetti({ particleCount: 120, spread: 80, origin: { y: 0.6 } }); playSound('success'); } } };
    const saveStateToLocalStorage = () => { try { localStorage.setItem('ggfState_v4', JSON.stringify({ inputs: state.inputs, isVFL: state.isVFL })) } catch (e) { console.warn('localStorage indisponible.') } };
    const loadStateFromLocalStorage = () => { try { const s = localStorage.getItem('ggfState_v4'); if (s) { const p = JSON.parse(s); state.inputs = p.inputs || {}; state.isVFL = p.isVFL ?? false; } } catch (e) { state.inputs = {}; state.isVFL = false; } };
    function setupCustomNumberInputs(){document.querySelectorAll('.ggf-input[type="number"]').forEach(i=>{if(i.parentElement.querySelector('.ggf-num-control')){return}const w=i.parentElement;const cc=document.createElement('div');cc.className='ggf-num-control';const ub=document.createElement('button');ub.type='button';ub.className='ggf-num-btn up';ub.setAttribute('aria-label','Augmenter la valeur');ub.innerHTML='▲';ub.addEventListener('click',()=>{i.stepUp();i.dispatchEvent(new Event('input',{bubbles:true}))});const db=document.createElement('button');db.type='button';db.className='ggf-num-btn down';db.setAttribute('aria-label','Diminuer la valeur');db.innerHTML='▼';db.addEventListener('click',()=>{i.stepDown();i.dispatchEvent(new Event('input',{bubbles:true}))});cc.appendChild(ub);cc.appendChild(db);w.appendChild(cc)})}
    function initWebGLBackground(){if(typeof THREE==='undefined'||prefersReducedMotion){return}const c=document.getElementById('ggf-webgl-bg');if(!c)return;const s=new THREE.Scene();const ca=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,0.1,1000);const r=new THREE.WebGLRenderer({antialias:true,alpha:true});r.setPixelRatio(window.devicePixelRatio);r.setSize(window.innerWidth,window.innerHeight);c.appendChild(r.domElement);const al=new THREE.AmbientLight(0xffffff,0.8);s.add(al);const pl=new THREE.PointLight(0xffffff,1);pl.position.set(20,50,60);s.add(pl);const p=[];const pc=80;const g=new THREE.SphereGeometry(0.1,16,16);const m=new THREE.MeshStandardMaterial({color:0xD4AF37,metalness:0.9,roughness:0.2});for(let i=0;i<pc;i++){const pa=new THREE.Mesh(g,m);pa.position.set((Math.random()-0.5)*100,(Math.random()-0.5)*100,(Math.random()-0.5)*100);pa.userData={speed:Math.random()*0.02+0.005,rotationSpeedX:(Math.random()-0.5)*0.02,rotationSpeedY:(Math.random()-0.5)*0.02,};s.add(pa);p.push(pa)}ca.position.z=50;function aP(){p.forEach(pa=>{pa.position.z+=pa.userData.speed;pa.rotation.x+=pa.userData.rotationSpeedX;pa.rotation.y+=pa.userData.rotationSpeedY;if(pa.position.z>50){pa.position.z=-50;pa.position.x=(Math.random()-0.5)*100}});r.render(s,ca);requestAnimationFrame(aP)}window.addEventListener('resize',()=>{r.setSize(window.innerWidth,window.innerHeight);ca.aspect=window.innerWidth/window.innerHeight;ca.updateProjectionMatrix()});aP()}
    function setupEventListeners() {
        const debouncedShowPanel = debounce(pid => showPanel(pid), 200);
        appContent.addEventListener('click', e => {
            const gt = e.target.closest('[data-goto]'); if (gt) { e.preventDefault(); debouncedShowPanel(gt.dataset.goto); }
            const vt = e.target.closest('.ggf-vfl-option'); if (vt) { state.isVFL = vt.dataset.vfl === 'true'; document.querySelectorAll('.ggf-vfl-option').forEach(o => o.classList.remove('active')); vt.classList.add('active'); saveStateToLocalStorage(); playSound('click'); }
            const pb = e.target.closest('#ggf-export-pdf-btn'); if (pb) { e.preventDefault(); generatePDF(); }
        });
        appContent.addEventListener('input', e => {
            const iid = e.target.dataset.inputId;
            if (iid) {
                state.inputs[iid] = e.target.value;
                if (e.target.type === 'number' && Number(e.target.value) < 0) { e.target.value = 0; state.inputs[iid] = 0; }
                if (iid.startsWith('presta-')) { updateCoachingSummary(); }
                saveStateToLocalStorage();
            }
        });
        helpBtn.addEventListener('click', () => { const t = CONFIG.TUTORIAL_TIPS[state.currentPanel] || CONFIG.TUTORIAL_TIPS.default; tutorialBody.innerHTML = t.map(tip => `<div class="ggf-tutorial-tip"><h4>${tip.title}</h4><p>${tip.text}</p></div>`).join(''); tutorialModal.classList.add('visible'); gsap.from('.ggf-tutorial-content', { scale: 0.9, opacity: 0, duration: 0.4, ease: 'power2.out' }); playSound('click'); });
        tutorialModal.addEventListener('click', e => { if (e.target === tutorialModal || e.target.classList.contains('ggf-tutorial-close')) { gsap.to('.ggf-tutorial-content', { scale: 0.9, opacity: 0, duration: 0.3, ease: 'power2.in', onComplete: () => tutorialModal.classList.remove('visible') }); playSound('click'); } });
        document.getElementById('ggf-pdf-retry-btn')?.addEventListener('click', generatePDF);
        document.addEventListener('gesturestart', e => e.preventDefault()); document.addEventListener('gesturechange', e => e.preventDefault()); document.addEventListener('gestureend', e => e.preventDefault());
    }
    function init() { loadStateFromLocalStorage(); initWebGLBackground(); setupEventListeners(); showPanel('loading'); setTimeout(() => showPanel('intro'), 1200); }
    init();
});
